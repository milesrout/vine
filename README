VINE: VIVE Is Not Emacs
VIVE: VINE Isn't Vim Either

VINE is that rarest of beasts: a doubly recursive acronym. It's also a text
editor. The command is 'vine', the language is 'Vine', the acronym is 'VINE'.

vine, like all good text editors, is also an operating system, a programming
language, a scripting language, a virtual machine, a window manager and a
computer use philosophy.

The goal of the VINE project is to develop a text editor that is as powerful as
Emacs but with vi's command philosophy applied throughout. Programs are modal,
and the way we interact with them should reflect that. Extensions for Emacs
that replace a lot of the default keyboard shortcuts with vi-style bindings
don't address that discrepency. They also don't take into account modern
computers, which are highly parallel and connected. Emacs with a 'vi bindings'
mode isn't a modern, modal, secure, connected, concurrent and fast text editor.
And it isn't a good web browser. It isn't a good mail client. It isn't a good
window manager. It isn't a good debugger. It isn't even a very good text
editor.

vine aims to be all of those things. Yes, this is extremely ambitious. It's
going to take a lot of effort. But it will be worth it.

Like Emacs, vine is written mostly in a unique programming language, also
called Vine. Vine is a safe, portable, easy-to-use programming language. It is
just-in-time compiled to machine code. It's a proper programming language, with
all the facilities of a normal programming language. Vine does not take great
leaps and strides in programming language design. It does not attempt to
integrate cutting edge programming languages research, as fun and interesting
as that is. It's just a fast, usable, safe language. Vine is implemented in C,
a language that will continue to be relevant for decades to come.

If vine is all that, what is it not? It's a virtual machine, a just-in-time
compiler, an ahead-of-time compiler, a command language, a web browser (and
thus another compiler), a mail client, a GUI toolkit, an operating system, a
process supervisor, a window manager, a file system, a repl, a debugger, a PDF
viewer, and, oh, a text editor too. What isn't it? It's not an integrated,
inescapable ecosystem. Every part of vine can be used on its own. vine is
interoperable, using standard inter-process communication mechanisms.
