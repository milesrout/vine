
		Errors

The way error conditions work in vine is on the face of things quite simple.
There are two types of error condition: recoverable and unrecoverable.
Unrecoverable error conditions are simpler to deal with, so they will be
discussed first.


		Unrecoverable errors

Unrecoverable error conditions are logical errors in code: bugs.  Failed
assertions, null dereferences, out-of-bounds errors, numerical underflow and
overflow, stack overflow, etc.  These should result in abandonment of the
minimal unit of control flow that will absolutely guarantee that the bug is
contained.  In parts of vine written in C this for the most part means calling
abort(1), because it is very difficult to partition state in a C program such
that different parts of a single program cannot affect each other outside of
splitting a program into multiple processes.  In parts written in Vine, some
errors may be "local" enough that it may be possible to only abort the current
Vine fibre.


		Recoverable errors

Recoverable error conditions are different.  A recoverable error condition is
a particular subset of conditions in general.  A condition is a state that can
be signalled by the running process.  This prompts the runtime to look at its
(dynamically-scoped) stack of condition handlers.  Condition handlers are
checked in order to find one that will handle the condition.  When it does,
that handler is run without unwinding the stack.  This is in stark contrast to
how exception handling works in typical languages, where the search for
a handler and the unwinding of the stack are interleaved.  Here, handlers are
just executed like any other function, at the top of the stack, with the same
state and context as the code that signalled the condition.  Then this code can
choose whether or not it wants to unwind the stack to deal with the condition.
If there is no handler to unwind the stack, then it is treated like an
unrecoverable error condition: in debug mode execution switches to the
debugger, while otherwise it causes the current process to crash.

